{"version":3,"sources":["logo.svg","gifimage.jsx","App.js","reportWebVitals.js","index.js"],"names":["GifImage","props","useState","movieData","setMovieData","useEffect","console","log","randomFlag","makeApiCall","a","url","name","urlName","fetch","then","res","json","gifEntry","data","id","setCurrentUrl","toString","search","src","alt","App","setName","tempName","setTempName","setRandomFlag","favouriteName","setFavouriteName","currentUrl","className","value","onChange","event","target","type","onClick","Math","random","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAAe,I,mCCGA,SAASA,EAASC,GAC7B,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KA2CA,OAzCAC,qBAAU,WACNC,QAAQC,IAAI,qBAAsBN,EAAMO,YACxC,IAAMC,EAAW,uCAAG,8BAAAC,EAAA,6DACZC,EAAM,GACLV,EAAMO,WAKPG,EAAM,6FAA+FV,EAAMW,MAJ3GD,EAAM,2FAA6FV,EAAMW,KACzGN,QAAQC,IAAI,sBAKZM,EAAU,GAEdT,EADAS,EAAU,gEAVM,SAYVC,MAAMH,GACPI,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAEHZ,QAAQC,IAAIW,EAASC,MAKjBN,EAJCZ,EAAMO,WAIG,kCAAoCU,EAASC,KAAKC,GAAK,aAHvD,kCAAoCF,EAASC,KAAK,GAAGC,GAAK,aAKxEhB,EAAaS,GACbZ,EAAMoB,cAAcR,GACpBP,QAAQC,IAAI,YAAaM,MAzBjB,2CAAH,qDA4BjBP,QAAQC,IAAIN,EAAMW,OAE0C,IAD7CX,EAAMW,KAAKU,WACbC,OAAO,mCAChBnB,EAAaH,EAAMW,MAGnBH,MAGL,CAACR,EAAMO,WAAYP,EAAMW,OAGxB,mCACI,qBAAKY,IAAKrB,EAAWsB,IAAI,eCuBtBC,MAnEf,WAAgB,IAAD,EAEb,EAAwBxB,mBAAS,kBAAjC,mBAAOU,EAAP,KAAae,EAAb,KACA,EAAgCzB,mBAAS,kBAAzC,mBAAO0B,EAAP,KAAiBC,EAAjB,KACA,EAAoC3B,oBAAS,GAA7C,mBAAOM,EAAP,KAAmBsB,EAAnB,KACA,EAA0C5B,mBAAS,IAAnD,mBAAO6B,EAAP,KAAsBC,EAAtB,KACA,EAAoC9B,mBAAS,IAA7C,mBAAO+B,EAAP,KAAmBZ,EAAnB,KAgDA,OACE,sBAAKa,UAAU,MAAf,UACE,uBAAOtB,KAAK,OAAOuB,MAAOP,EAAUQ,SAnCxC,SAAoBC,GAClBR,EAAYQ,EAAMC,OAAOH,QAkCmCI,KAAK,SAC/D,uBAAOA,KAAK,SAASC,QAjDzB,WACElC,QAAQC,IAAI,iBACZoB,EAAQC,GACRtB,QAAQC,IAAIqB,GACI,IAAZA,EACFE,GAAc,IAGdxB,QAAQC,IAAI,kBACZuB,EAAcW,KAAKC,cAyCnB,wBAAQF,QA3BZ,SAAsBH,GACpB/B,QAAQC,IAAI,sBACZuB,EAAcW,KAAKC,UACnBf,EAAQC,IAwBN,4DACA,wBAAQY,QAlCZ,SAAmBH,GACjB/B,QAAQC,IAAI,cACZuB,EAAcW,KAAKC,UACnBf,EAAQc,KAAKC,WA+BX,iCACA,wBAAQF,QAvBZ,WACER,EAAiBC,GACjB3B,QAAQC,IAAIwB,IAqBV,2BACA,wBAAQS,QAnBZ,SAAuBH,GACrB/B,QAAQC,IAAIwB,GACS,IAAjBA,GACFD,GAAc,GACdH,EAAQI,KAGRzB,QAAQC,IAAI,kBACZuB,EAAcW,KAAKC,YAWnB,4BACA,cAAC1C,GAAD,GAAUQ,WAAYA,EAAYI,KAAMA,GAAxC,2BAA0DJ,GAA1D,8BAAqFa,GAArF,QCvDSsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0c3576ba.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { useState, useEffect } from 'react'\n\n\nexport default function GifImage(props) {\n    const [movieData, setMovieData] = useState(\"\")\n\n    useEffect(() => {\n        console.log(\"use effect started\", props.randomFlag)\n        const makeApiCall = async () => {\n            let url = ''\n            if (!props.randomFlag) {\n                url = \"https://api.giphy.com/v1/gifs/search?api_key=SpO5j8t9PSukU4OzP8GMD2oZUoWpxoV7&limit=1&q=\" + props.name\n                console.log(\"searched specific\")\n            }\n            else {\n                url = \"https://api.giphy.com/v1/gifs/random?api_key=SpO5j8t9PSukU4OzP8GMD2oZUoWpxoV7&limit=1&tag=\" + props.name\n            }\n            let urlName = ''\n            urlName = 'https://miro.medium.com/max/700/1*CsJ05WEGfunYMLGfsT2sXA.gif'\n            setMovieData(urlName);\n            await fetch(url)\n                .then((res) => res.json())\n                .then((gifEntry) => {\n\n                    console.log(gifEntry.data)\n                    if (!props.randomFlag) {\n                        urlName = \"https://media1.giphy.com/media/\" + gifEntry.data[0].id + \"/giphy.gif\"\n                    }\n                    else {\n                        urlName = \"https://media1.giphy.com/media/\" + gifEntry.data.id + \"/giphy.gif\"\n                    }\n                    setMovieData(urlName);\n                    props.setCurrentUrl(urlName)\n                    console.log(\"movieData\", urlName);\n                });\n        };\n        console.log(props.name)\n        let tempName = props.name.toString()\n        if (tempName.search(\"https://media1.giphy.com/media/\") !== -1) {\n            setMovieData(props.name)\n        }\n        else {\n            makeApiCall()\n        }\n\n    }, [props.randomFlag, props.name])\n\n    return (\n        <>\n            <img src={movieData} alt=\"gifimage\" />\n        </>\n    )\n}","import logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from 'react';\nimport GifImage from './gifimage';\n\nfunction App() {\n\n  const [name, setName] = useState(\"enter gif name\")\n  const [tempName, setTempName] = useState(\"enter gif name\")\n  const [randomFlag, setRandomFlag] = useState(true)\n  const [favouriteName, setFavouriteName] = useState('')\n  const [currentUrl, setCurrentUrl] = useState('')\n\n  function handleSubmit() {\n    console.log(\"handle submit\")\n    setName(tempName)\n    console.log(tempName)\n    if (tempName != '') {\n      setRandomFlag(false)\n    }\n    else {\n      console.log(\"trigger random\")\n      setRandomFlag(Math.random())\n    }\n  }\n\n  function handleName(event) {\n    setTempName(event.target.value)\n  }\n\n  function randomGif(event) {\n    console.log(\"random gif\")\n    setRandomFlag(Math.random())\n    setName(Math.random())\n  }\n\n  function randomSearch(event) {\n    console.log(\"random gif related\")\n    setRandomFlag(Math.random())\n    setName(tempName)\n  }\n\n  function favouriteGif() {\n    setFavouriteName(currentUrl)\n    console.log(favouriteName)\n  }\n\n  function loadFavourite(event) {\n    console.log(favouriteName)\n    if (favouriteName != '') {\n      setRandomFlag(false)\n      setName(favouriteName)\n    }\n    else {\n      console.log(\"trigger random\")\n      setRandomFlag(Math.random())\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <input name=\"name\" value={tempName} onChange={handleName} type='text' />\n      <input type='submit' onClick={handleSubmit} />\n      <button onClick={randomSearch}>generate random gif (but with related keyword)</button>\n      <button onClick={randomGif}>generate random gif</button>\n      <button onClick={favouriteGif}>favourite gif</button>\n      <button onClick={loadFavourite}>load favourite</button>\n      <GifImage randomFlag={randomFlag} name={name} randomFlag={randomFlag} setCurrentUrl={setCurrentUrl}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}